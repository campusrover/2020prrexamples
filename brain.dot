digraph brain {
graph [fontname="times-roman"];
node [fontname="times-roman"];
edge [fontname="times-roman"];
Brain [fontcolor=black, shape=octagon, fontsize=11, style=filled, fillcolor=cyan];
"Range Safety" [fontcolor=black, shape=box, fontsize=11, style=filled, fillcolor=orange];
Brain -> "Range Safety";
CheckMinDistance [fontcolor=black, shape=ellipse, fontsize=11, style=filled, fillcolor=gray];
"Range Safety" -> CheckMinDistance;
TurnAwayFromObstacle [fontcolor=black, shape=ellipse, fontsize=11, style=filled, fillcolor=gray];
"Range Safety" -> TurnAwayFromObstacle;
CreepForward [fontcolor=black, shape=ellipse, fontsize=11, style=filled, fillcolor=gray];
"Range Safety" -> CreepForward;
ApproachWall [fontcolor=black, shape=box, fontsize=11, style=filled, fillcolor=orange];
Brain -> ApproachWall;
"Face Wall" [fontcolor=black, shape=octagon, fontsize=11, style=filled, fillcolor=cyan];
ApproachWall -> "Face Wall";
CheckFacingObstacle [fontcolor=black, shape=ellipse, fontsize=11, style=filled, fillcolor=gray];
"Face Wall" -> CheckFacingObstacle;
TurnTowardsNearestObstacle [fontcolor=black, shape=ellipse, fontsize=11, style=filled, fillcolor=gray];
"Face Wall" -> TurnTowardsNearestObstacle;
"Move towards wall" [fontcolor=black, shape=box, fontsize=11, style=filled, fillcolor=orange];
ApproachWall -> "Move towards wall";
"Inverter\n[CheckMinDistance]" [fontcolor=black, shape=ellipse, fontsize=11, style=filled, fillcolor=ghostwhite];
"Move towards wall" -> "Inverter\n[CheckMinDistance]";
"CheckMinDistance*" [fontcolor=black, shape=ellipse, fontsize=11, style=filled, fillcolor=gray];
"Inverter\n[CheckMinDistance]" -> "CheckMinDistance*";
DriveForward [fontcolor=black, shape=ellipse, fontsize=11, style=filled, fillcolor=gray];
"Move towards wall" -> DriveForward;
}
